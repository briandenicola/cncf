schemaVersion: 1.0.0
name: whatos
version: 0.0.2
description: "An example Porter configuration to deploy sample Whatos golang API"

mixins:
  - terraform
  - az
  - exec
  - kubernetes

dockerfile: template.Dockerfile

credentials:
- name: SUBSCRIPTION_ID
  env: ARM_SUBSCRIPTION_ID
- name: CLIENT_ID
  env: ARM_CLIENT_ID
- name: TENANT_ID
  env: ARM_TENANT_ID
- name: CLIENT_SECRET
  env: ARM_CLIENT_SECRET
- name: kubeconfig
  path: /home/nonroot/.kube/config

parameters:
  - name: region
    type: string
    default: "SouthCentralUS"

  - name: oidc_issuer_url
    type: string

install:
  - terraform:
      description: "Create Azure Resources"
      vars:
        subscription_id: ${bundle.credentials.SUBSCRIPTION_ID}
        tenant_id: ${bundle.credentials.TENANT_ID}
        client_id: ${bundle.credentials.CLIENT_ID}
        client_secret: ${bundle.credentials.CLIENT_SECRET} 
        oidc_issuer_url: ${bundle.parameters.oidc_issuer_url}
        region: ${bundle.parameters.region}
      outputs:
        - name: RESOURCE_GROUP
        - name: CERTIFICATE_KV_URI
        - name: APPLICATION_URI
        - name: WORKLOAD_IDENTITY

  - az:
      arguments:
      - login
      flags:
        service-principal:
        username: ${ bundle.credentials.CLIENT_ID }
        password: ${ bundle.credentials.CLIENT_SECRET }
        tenant: ${ bundle.credentials.TENANT_ID }

  - exec: 
      description: "Update templates"
      command: ./helpers.sh
      arguments:
        - update-templates
        - ${ bundle.credentials.TENANT_ID }
        - ${ bundle.credentials.CLIENT_ID }
        - ${ bundle.outputs.WORKLOAD_IDENTITY}
  - kubernetes:
      manifests:
      - /cnab/app/manifests/overlay
      wait: true

  - exec:
      description: "Get Service IP Address"
      command: ./helpers.sh
      arguments:
        - dump-ip
        - ${bundle.outputs.IP_ADDRESS}

uninstall:
  - terraform:
      description: "Remove Azure Resources"
      vars:
        subscription_id: ${bundle.credentials.subscription_id}
        tenant_id: ${bundle.credentials.tenant_id}
        client_id: ${bundle.credentials.client_id}
        client_secret: ${bundle.credentials.client_secret} 
        oidc_issuer_url: ${bundle.parameters.oidc_issuer_url}
        region: ${bundle.parameters.region}
  #- az:
  #    arguments:
  #    - group
  #    - delete
  #    flags:
  #      name: ${ bundle.outputs.RESOURCE_GROUP }